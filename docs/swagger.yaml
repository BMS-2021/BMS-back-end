basePath: /api
definitions:
  model.AdminReq:
    properties:
      name:
        type: string
      password:
        type: string
    required:
    - name
    - password
    type: object
  model.AdminResp:
    properties:
      contact:
        type: string
      name:
        type: string
    type: object
  model.BookReq:
    properties:
      author:
        type: string
      category:
        type: string
      press:
        type: string
      price:
        type: number
      stock:
        type: integer
      title:
        type: string
      total:
        type: integer
      year:
        type: integer
    required:
    - author
    - category
    - press
    - price
    - stock
    - title
    - total
    - year
    type: object
host: ralxyz.dev.zjuqsc.com
info:
  contact: {}
  description: This API will be used under staging environment.
  title: Book Management System API
  version: "0.2"
paths:
  /book:
    put:
      consumes:
      - application/json
      parameters:
      - description: Information of a book
        in: body
        name: book
        required: true
        schema:
          $ref: '#/definitions/model.BookReq'
      responses:
        "200":
          description: ""
      summary: Create a single book item
      tags:
      - Book
  /books:
    get:
      parameters:
      - in: query
        name: author
        type: string
      - in: query
        name: category
        type: string
      - in: query
        name: press
        type: string
      - in: query
        name: priceMax
        type: integer
      - in: query
        name: priceMin
        type: integer
      - in: query
        name: title
        type: string
      - in: query
        name: yearMax
        type: integer
      - in: query
        name: yearMin
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: ""
      summary: Retrieve multiple books under multiple conditions
      tags:
      - Book
    put:
      consumes:
      - text/csv
      parameters:
      - description: A csv file, with book information inside
        in: body
        name: file
        required: true
        schema:
          type: object
      responses:
        "200":
          description: ""
      summary: Create multiple book items by uploading a csv file
      tags:
      - Book
  /login:
    get:
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.AdminResp'
        "401":
          description: Not logged in
          schema:
            type: string
      summary: Check login status
      tags:
      - Login
    post:
      consumes:
      - application/json
      parameters:
      - description: Login information
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/model.AdminReq'
      responses:
        "200":
          description: ""
      tags:
      - Login
swagger: "2.0"
