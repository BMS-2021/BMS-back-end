{
    "swagger": "2.0",
    "info": {
        "description": "This API will be used under staging environment.",
        "title": "Book Management System API",
        "contact": {},
        "version": "0.2"
    },
    "host": "ralxyz.dev.zjuqsc.com",
    "basePath": "/api",
    "paths": {
        "/book": {
            "put": {
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "Book"
                ],
                "summary": "Create a single book item",
                "parameters": [
                    {
                        "description": "Information of a book",
                        "name": "book",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/model.BookReq"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": ""
                    }
                }
            }
        },
        "/books": {
            "get": {
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Book"
                ],
                "summary": "Retrieve multiple books under multiple conditions",
                "parameters": [
                    {
                        "type": "string",
                        "name": "author",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "name": "category",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "name": "press",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "name": "priceMax",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "name": "priceMin",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "name": "title",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "name": "yearMax",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "name": "yearMin",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/model.Book"
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            },
            "put": {
                "consumes": [
                    "text/csv"
                ],
                "tags": [
                    "Book"
                ],
                "summary": "Create multiple book items by uploading a csv file",
                "parameters": [
                    {
                        "description": "A csv file, with book information inside",
                        "name": "file",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "object"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": ""
                    }
                }
            }
        },
        "/login": {
            "get": {
                "tags": [
                    "Login"
                ],
                "summary": "Check login status",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/model.AdminResp"
                        }
                    },
                    "401": {
                        "description": "Not logged in",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            },
            "post": {
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "Login"
                ],
                "parameters": [
                    {
                        "description": "Login information",
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/model.AdminReq"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": ""
                    }
                }
            }
        }
    },
    "definitions": {
        "model.AdminReq": {
            "type": "object",
            "required": [
                "name",
                "password"
            ],
            "properties": {
                "name": {
                    "type": "string"
                },
                "password": {
                    "type": "string"
                }
            }
        },
        "model.AdminResp": {
            "type": "object",
            "properties": {
                "contact": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                }
            }
        },
        "model.Book": {
            "type": "object",
            "properties": {
                "author": {
                    "type": "string"
                },
                "category": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "press": {
                    "type": "string"
                },
                "price": {
                    "type": "number"
                },
                "stock": {
                    "type": "integer"
                },
                "title": {
                    "type": "string"
                },
                "total": {
                    "type": "integer"
                },
                "year": {
                    "type": "integer"
                }
            }
        },
        "model.BookReq": {
            "type": "object",
            "required": [
                "author",
                "category",
                "press",
                "price",
                "title",
                "total",
                "year"
            ],
            "properties": {
                "author": {
                    "type": "string"
                },
                "category": {
                    "type": "string"
                },
                "press": {
                    "type": "string"
                },
                "price": {
                    "type": "number"
                },
                "title": {
                    "type": "string"
                },
                "total": {
                    "type": "integer"
                },
                "year": {
                    "type": "integer"
                }
            }
        }
    }
}